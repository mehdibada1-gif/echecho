rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper functions
    function isSignedIn() {
      return request.auth != null;
    }

    function isOwner(userId) {
      return request.auth.uid == userId;
    }
    
    // Users can read any profile, but only write to their own.
    match /users/{userId} {
      allow read: if true;
      allow write: if isOwner(userId);
    }

    // Organizations can be read by anyone, but only written by the owner.
    match /organizations/{orgId} {
        allow read: if true;
        allow create, update, delete: if isSignedIn() && request.resource.data.ownerId == request.auth.uid;
    }

    // Blogs can be read by anyone, but only created, updated, or deleted by authenticated users for their own content.
    match /blogs/{blogId} {
        allow read: if true;
        allow create: if isSignedIn() && request.resource.data.createdBy == request.auth.uid;
        allow update, delete: if isSignedIn() && resource.data.createdBy == request.auth.uid;
    }

    // Events can be read by anyone.
    // Events can be created and updated by authenticated users.
    // Deletion is restricted to the event creator.
    // Joining/leaving (updating participants) is allowed for any signed-in user.
    match /events/{eventId} {
        allow read: if true;
        allow create: if isSignedIn() && request.resource.data.createdBy == request.auth.uid;
        allow update: if isSignedIn(); // Allows joining/leaving and editing by creator
        allow delete: if isSignedIn() && resource.data.createdBy == request.auth.uid;
    }

    // Chats can only be read or written to by participants of the chat.
    match /chats/{chatId} {
      allow read, write: if isSignedIn() && request.auth.uid in resource.data.participantIds;
      
      // Messages can only be read or written by chat participants.
      match /messages/{messageId} {
         allow read, write: if isSignedIn() && request.auth.uid in get(/databases/$(database)/documents/chats/$(chatId)).data.participantIds;
      }
    }
  }
}
